#include <GL/glut.h>
#include <cmath>

// Função para desenhar um trapézio
void drawTrapezoid(float x1, float y1, float x2, float y2, float baseWidth, float topWidth, float r, float g, float b) {
    glColor3f(r, g, b);
    glBegin(GL_QUADS);
    glVertex2f(x1, y1);             // Vértice inferior esquerdo
    glVertex2f(x1 + baseWidth, y1); // Vértice inferior direito
    glVertex2f(x2 + topWidth, y2);   // Vértice superior direito
    glVertex2f(x2, y2);             // Vértice superior esquerdo
    glEnd();
}

// Função para desenhar um círculo
void drawCircle(float x, float y, float radius, float r, float g, float b) {
    glColor3f(r, g, b);
    glBegin(GL_TRIANGLE_FAN);
    glVertex2f(x, y);
    for (int i = 0; i <= 100; i++) {
        float angle = 2.0f * 3.1415926f * i / 100; // ângulos do círculo
        float dx = radius * cosf(angle);
        float dy = radius * sinf(angle);
        glVertex2f(x + dx, y + dy);
    }
    glEnd();
}

// Função para desenhar feixes de luz em forma de triângulo deitado
void drawHorizontalLightBeam(float x, float y, float width, float height) {
    glBegin(GL_TRIANGLES);
    glVertex2f(x, y);             // Vértice à direita
    glVertex2f(x - width, y + height); // Vértice superior esquerdo
    glVertex2f(x - width, y - height); // Vértice inferior esquerdo
    glEnd();
}

// Variáveis globais para movimentação
float movHorizontal = -0.2;  // Movimentação horizontal do farol
float movRetangulo = -0.31;   // Movimentação horizontal do retângulo
float movHorizontal1 = -0.26; // Posição do quadrado amarelo à esquerda
float movHorizontal2 = -0.05; // Posição do quadrado amarelo à direita

// Função de exibição
void display() {
    glClear(GL_COLOR_BUFFER_BIT);

    // Aumentando a altura do farol
    float yOffset = -0.8; // Deslocamento para baixo para aumentar a altura
    float heightIncrement = 0.2; // Incremento de altura entre os trapézios
    float largTorre = 0.2;
    float largQuad01 = 0.15;
    float largQuad02 = 0.15;

	// Desenha o círculo cinza no topo do farol
    drawCircle(-0.08, yOffset + 6 * heightIncrement + 0.2, 0.06, 0.5, 0.5, 0.5); // Círculo cinza
    // Corpo do farol em forma de trapézio com listras
    drawTrapezoid(-0.26 + movHorizontal, yOffset, -0.23 + movHorizontal, yOffset + heightIncrement, 0.5 + largTorre, 0.45 + largTorre, 1.0, 0.0, 0.0); // Base vermelha
    drawTrapezoid(-0.23 + movHorizontal, yOffset + heightIncrement, -0.20 + movHorizontal, yOffset + 2 * heightIncrement, 0.45 + largTorre, 0.4 + largTorre, 0.8, 0.8, 0.8); // Cinza
    drawTrapezoid(-0.20 + movHorizontal, yOffset + 2 * heightIncrement, -0.17 + movHorizontal, yOffset + 3 * heightIncrement, 0.4 + largTorre, 0.35 + largTorre, 1.0, 0.0, 0.0); // Vermelho
    drawTrapezoid(-0.17 + movHorizontal, yOffset + 3 * heightIncrement, -0.14 + movHorizontal, yOffset + 4 * heightIncrement, 0.35 + largTorre, 0.3 + largTorre, 0.8, 0.8, 0.8); // Cinza
    drawTrapezoid(-0.14 + movHorizontal, yOffset + 4 * heightIncrement, -0.11 + movHorizontal, yOffset + 5 * heightIncrement, 0.3 + largTorre, 0.25 + largTorre, 1.0, 0.0, 0.0); // Vermelho

    // Desenho da linha cinza
    drawTrapezoid(-0.37, 0.45, -0.32, 0.60, 0.565, 0.48, 0.8, 0.8, 0.8);
    drawTrapezoid(-0.37, 0.4, -0.37, 0.45, 0.565, 0.565, 0.5, 0.5, 0.5);

    // Desenha o retângulo deitado
    drawTrapezoid(movRetangulo, yOffset + 5 * heightIncrement, movRetangulo, yOffset + 5 * heightIncrement + 0.2, 0.45, 0.45, 0.5, 0.5, 0.5); // Retângulo cinza deitado

    // Desenha os quadrados amarelos
    drawTrapezoid(movHorizontal1, yOffset + 5 * heightIncrement, movHorizontal1, yOffset + 5 * heightIncrement + 0.2, largQuad01, largQuad01, 1.0, 1.0, 0.0); // Quadrado esquerdo
    drawTrapezoid(movHorizontal2, yOffset + 5 * heightIncrement, movHorizontal2, yOffset + 5 * heightIncrement + 0.2, largQuad02, largQuad02, 1.0, 1.0, 0.0); // Quadrado direito

    // Feixes de luz em forma de triângulo deitado
    glColor3f(1.0, 1.0, 0.0); // Amarelo
    drawHorizontalLightBeam(-0.33, yOffset + 6 * heightIncrement - 0.1, 0.6, 0.2); // Feixe esquerdo
    drawHorizontalLightBeam(0.15, yOffset + 6 * heightIncrement -0.1, -0.6, 0.2); // Feixe direito (invertido)

    // Desenha a porta azul na parte inferior do farol
    drawTrapezoid(-0.15, yOffset, -0.15, yOffset + 0.14, 0.1, 0.1, 0.0, 1.0, 1.0); // Porta azul celeste
	drawCircle(-0.1,  yOffset + 0.14, 0.05, 0.0, 1.0, 1.0); // Círculo azul na parte superior
	
	
	//Janela no meio 
	drawCircle(-0.1,  yOffset + 0.7, 0.06, 0.0, 0.0, 0.0); // Círculo preto na parte superior
	drawCircle(-0.1,  yOffset + 0.7, 0.05, 0.0, 1.0, 1.0); // Círculo azul na parte superior
	

    glFlush();
}

// Função de inicialização
void init() {
    glClearColor(1.0, 1.0, 1.0, 1.0); // Fundo branco
}

// Função principal
int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(400, 400);
    glutCreateWindow("Desenho do Farol com OpenGL e GLUT");
    init();
    glutDisplayFunc(display);
    glutMainLoop();
    return 0;
}
